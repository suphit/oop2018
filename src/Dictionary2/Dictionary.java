/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project1;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author arm
 */
public class Dictionary extends javax.swing.JFrame {

    /**
     * Creates new form Dictionary
     */
    public Dictionary() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextPane();
        txt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("English - Vietnamese Dictionary");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        txtResult.setContentType("text/html"); // NOI18N
        txtResult.setFocusable(false);
        jScrollPane2.setViewportView(txtResult);

        txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKeyTyped(evt);
            }
        });

        jButton1.setText("About us");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Help");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Exit");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel1.setText("Search :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(jButton3))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private DefaultListModel<String> mod;
    private ArrayList<Data> arr;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        mod=new DefaultListModel<>();
        list.setModel(mod);
        arr=new ArrayList<>();
        Data obj;
        
        obj= new Data("zebra", "zebra : <font color='red'>/ˈziː.brə/</font><br>&#09; <font color='blue'>(n).</font> Con ngựa vằn.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("lioness", "lioness : <font color='red'>/ˈlaɪ.ənis/</font><br>&#09; <font color='blue'>(n).</font> Sư tử (cái).");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("lion", "lion : <font color='red'>/ˈlaɪ.ən/</font><br>&#09; <font color='blue'>(n).</font> Sư tử (đực).");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("hyena", "hyena : <font color='red'>/haɪˈiː.nə/</font><br>&#09; <font color='blue'>(n).</font> Con linh cẩu.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("rhinoceros", "rhinoceros : <font color='red'>/raɪˈnɒs.ər.əs/</font><br>&#09; <font color='blue'>(n).</font> Con tê giác.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("baboon", "baboon : <font color='red'>/bəˈbuːn/</font><br>&#09; <font color='blue'>(n).</font> Khỉ đầu chó.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("gazelle", "gazelle : <font color='red'>/gəˈzel/</font><br>&#09; <font color='blue'>(n).</font> Linh dương Gazen.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("cheetah", "cheetah : <font color='red'>ˈtʃiː.tə/</font><br>&#09; <font color='blue'>(n).</font> Báo Gêpa.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("elephant", "elephant : <font color='red'>ˈel.ɪ.fənt/</font><br>&#09; <font color='blue'>(n).</font> Con voi.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("owl", "owl : <font color='red'>/aʊl/</font><br>&#09; <font color='blue'>(n).</font> Cú mèo.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("eagle", "eagle : <font color='red'>/ˈiː.gl/</font><br>&#09; <font color='blue'>(n).</font> Chim đại bàng.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("woodpecker", "woodpecker : <font color='red'>/ˈwʊdˌpek.əʳ/</font><br>&#09; <font color='blue'>(n).</font> Chim gõ kiến.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("peacock", "peacock : <font color='red'>/ˈpiː.kɒk/</font><br>&#09; <font color='blue'>(n).</font> Con công (trống).");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("aparrow", "sparrow : <font color='red'>ˈspær.əʊ/</font><br>&#09; <font color='blue'>(n).</font> Chim sẻ.");
        arr.add(obj);   mod.addElement(obj.getText());
        obj= new Data("heron", "heron : <font color='red'>/ˈher.ən/</font><br>&#09; <font color='blue'>(n).</font> Diệc.");
        arr.add(obj);   mod.addElement(obj.getText());
        obj= new Data("swan", "swan : <font color='red'>/swɒn/</font><br>&#09; <font color='blue'>(n).</font> Thiên nga.");
        arr.add(obj);   mod.addElement(obj.getText());
        obj= new Data("falcon", "falcon : <font color='red'>/ˈfɒl.kən/</font><br>&#09; <font color='blue'>(n).</font> Chim ưng.");
        arr.add(obj);   mod.addElement(obj.getText());
        obj= new Data("ostrich", "ostrich : <font color='red'>/ˈɒs.trɪtʃ/</font><br>&#09; <font color='blue'>(n).</font> Đà điểu.");
        arr.add(obj);   mod.addElement(obj.getText());
        obj= new Data("nest", "nest : <font color='red'>/nest/</font><br>&#09; <font color='blue'>(n).</font> Cái tổ.");
        arr.add(obj);   mod.addElement(obj.getText());
        obj= new Data("feather", "feather : <font color='red'>/ˈfeð.əʳ/</font><br>&#09; <font color='blue'>(n).</font> Lông vũ.");
        arr.add(obj);   mod.addElement(obj.getText());
        obj= new Data("talon", "talon : <font color='red'>/ˈtæl.ən/</font><br>&#09; <font color='blue'>(n).</font> Móng vuốt.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        
        
        
        
        
        
        
        
        obj= new Data("vietnam", "Vietnam : <font color='red'>vjɛtˈnɑːm</font><br>&#09; <font color='blue'>(n).</font> Việt Nam.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("england", "England : <font color='red'>/ˈɪŋglənd/</font><br>&#09; <font color='blue'>(n).</font> Anh.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("thailand", "Thailand : <font color='red'>/ˈtaɪlænd/</font><br>&#09; <font color='blue'>(n).</font> Thái Lan.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("india", "India : <font color='red'>/ˈɪndɪə/</font><br>&#09; <font color='blue'>(n).</font> Ấn Độ.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("singapore", "Singapore : <font color='red'>/sɪŋgəˈpɔː/</font><br>&#09; <font color='blue'>(n).</font> Singapore.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("china", "China : <font color='red'>/ˈʧaɪnə/</font><br>&#09; <font color='blue'>(n).</font> Trung Quốc.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("japan", "Japan : <font color='red'>/ʤəˈpæn/</font><br>&#09; <font color='blue'>(n).</font> Nhật Bản.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("cambodia", "Cambodia : <font color='red'>/Combodia /</font><br>&#09; <font color='blue'>(n).</font> Cam Pu Chia.");
        arr.add(obj);   mod.addElement(obj.getText());       
        
        obj= new Data("cuba", "Cuba : <font color='red'>/ˈkjuːbə/</font><br>&#09; <font color='blue'>(n).</font> Cu Ba.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("france", "France : <font color='red'>/ˈfrɑːns/</font><br>&#09; <font color='blue'>(n).</font> Pháp.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("ameraca", "America : <font color='red'>/əˈmɛrɪkə/</font><br>&#09; <font color='blue'>(n).</font> Mỹ, Hoa Kỳ.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("canada", "Canada : <font color='red'>/ˈkænədə/</font><br>&#09; <font color='blue'>(n).</font> Canada.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("russia", "Russia : <font color='red'>/ˈrʌʃə/</font><br>&#09; <font color='blue'>(n).</font> Nga.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("australia", "Australia : <font color='red'>/ɒˈstreɪliːə /</font><br>&#09; <font color='blue'>(n).</font> Úc.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("greece", "Greece : <font color='red'>/griːs/</font><br>&#09; <font color='blue'>(n).</font> Hy Lạp.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("denmark", "Denmark : <font color='red'>/ˈdɛnmɑːk/</font><br>&#09; <font color='blue'>(n).</font> Đan Mạch.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("spain", "Spain : <font color='red'>/speɪn/</font><br>&#09; <font color='blue'>(n).</font> Tây Ban Nha.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("sweden", "Sweden : <font color='red'>/ˈswɪdən/</font><br>&#09; <font color='blue'>(n).</font> Thụy Điển.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("switzerland", "Switzerland : <font color='red'>/ˈswɪtsələnd /</font><br>&#09; <font color='blue'>(n).</font> Thụy Sỹ.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("turkey", "Turkey : <font color='red'>/ˈtɜːki/</font><br>&#09; <font color='blue'>(n).</font> Thổ Nhĩ Kỳ.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("germany", "Germany : <font color='red'>/ˈʤɜːməni /</font><br>&#09; <font color='blue'>(n).</font> Đức.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("mexico", "Mexico : <font color='red'>/ˈmɛksɪkəʊ/</font><br>&#09; <font color='blue'>(n).</font> Mexico.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("brazil", "Brazil : <font color='red'>/brəˈzɪl/</font><br>&#09; <font color='blue'>(n).</font> Braxin.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("italy", "Italy : <font color='red'>/ˈɪtəli/</font><br>&#09; <font color='blue'>(n).</font> Italy, Ý.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("korea", "Korea : <font color='red'>/kəˈrɪə/</font><br>&#09; <font color='blue'>(n).</font> Hàn Quốc.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("portugal", "Portugal : <font color='red'>/pɔːʧəgəl/</font><br>&#09; <font color='blue'>(n).</font> Bồ Đào Nha.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        obj= new Data("poland", "Poland : <font color='red'>/ˈpəʊlənd/</font><br>&#09; <font color='blue'>(n).</font> Ba Lan.");
        arr.add(obj);   mod.addElement(obj.getText());
        
        
    }//GEN-LAST:event_formWindowOpened

    private void listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValueChanged
        // TODO add your handling code here:
        if(!list.isSelectionEmpty()){
            int index=list.getSelectedIndex();
            Data obj=arr.get(index);
            txtResult.setText(obj.getDec());
        }
    }//GEN-LAST:event_listValueChanged

    private void txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyTyped
        // TODO add your handling code here:
        String text=txt.getText().trim();
        text+=evt.getKeyChar();
        
        text=text.trim();
        //text=text.trim().toLowerCase();
        
        for (int i=0; i<mod.size(); i++){
            String val=""+mod.getElementAt(i);
            if(val.startsWith(text)){
                
                //val=val.toLowerCase();
                
                list.setSelectedIndex(i);
                return;
            }
            
        }
        txtResult.setText("This word not fount");
        list.clearSelection();
        //System.out.println(text);
    }//GEN-LAST:event_txtKeyTyped

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "์Nhóm PMC_SP có 2 thành viên:\n1.Sụ phít Phôm ma chăn.\n2.Nguyễn Anh Đức.","About us",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        
        int confirmed = JOptionPane.showConfirmDialog(null, "Do you want to exit?","EXIT",JOptionPane.YES_NO_OPTION);
        if(confirmed == JOptionPane.YES_OPTION)
        {
            dispose();
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "์How to use program:\n1.Search any word in the search form\n2.or select word in the left side\n3.The program would show meaning of word in the right side.","Help",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dictionary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list;
    private javax.swing.JTextField txt;
    private javax.swing.JTextPane txtResult;
    // End of variables declaration//GEN-END:variables
}
